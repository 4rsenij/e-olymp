#include <iostream>
#include <fstream>
#include <vector>
#include <string>

#define ln length()
#define FOR(i,n) for((i) = 0; (i) < (int)(n); (i)++)

using namespace std;

fstream in("input.txt", ios::in), out("output.txt", ios::out);

typedef long long ll;
typedef vector<int> vi;
typedef vector<bool> vb;
typedef pair<int, int> pii;

ll n, tmp, i;
string d[100000];
bool db[100000];

string SUM(string a, string b)
{
	for (int j = 0; j < a.ln / 2; j++) swap(a[j], a[a.ln - j - 1]);
	for (int j = 0; j < b.ln / 2; j++) swap(b[j], b[b.ln - j - 1]);
	if (a.ln < b.ln) swap(a, b);
	ll j, ost = 0;
	for (j = 0; j < b.ln; j++)
	{
		ost += a[j] + b[j] - 96;
		a[j] = ost % 10 + 48;
		ost /= 10;
	}
	while (ost)
	{
		if (j == a.ln) a += ost + 48, ost = 0;
		else
		{
			ost += a[j] - 48;
			a[j] = ost % 10 + 48;
			ost /= 10;
			j++;
		}
	}
	for (j = 0; j < a.ln / 2; j++) swap(a[j], a[a.ln - j - 1]);
	return a;
}

string dp(ll fibo)
{
	if (db[fibo]) return d[fibo];
	db[fibo] = true;
	return d[fibo] = SUM(SUM(dp(fibo - 1), dp(fibo - 2)), SUM(dp(fibo - 3), dp(fibo - 4)));
}

int main()
{
	d[0] = d[1] = d[2] = d[3] = d[4] = "1";
	db[0] = db[1] = db[2] = db[3] = db[4] = true;
	cin >> n;
	FOR(i, n)
	{
		cin >> tmp;
		cout << dp(tmp) << endl;
	}
}
